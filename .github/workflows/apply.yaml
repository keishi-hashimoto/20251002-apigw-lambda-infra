name: Apply
run-name: Apply
on:
  push:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    shell: bash
permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  apply:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    env:
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      BUCKET_KEY: ${{ secrets.BUCKET_KEY }}
      TF_VAR_function_name: ${{ secrets.TF_VAR_function_name }}
      TF_VAR_lambda_exec_role: ${{ secrets.TF_VAR_lambda_exec_role }}
      TF_VAR_api_gateway_name: ${{ secrets.TF_VAR_api_gateway_name }}
      TF_VAR_lambda_permission_statement_id: ${{ secrets.TF_VAR_lambda_permission_statement_id }}
      TF_VAR_ssh_bucket_name: ${{ secrets.TF_VAR_ssh_bucket_name }}
      TF_VAR_index_document: ${{ secrets.TF_VAR_index_document }}
      TF_VAR_error_page: ${{ secrets.TF_VAR_error_page }}
      TF_VAR_tablename: ${{ secrets.TF_VAR_tablename }}
      TF_VAR_present_bucket: ${{ secrets.TF_VAR_present_bucket }}
      TF_VAR_present_key: ${{ secrets.TF_VAR_present_key }}
      TF_VAR_from_email: ${{ secrets.TF_VAR_from_email }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up mise
        uses: jdx/mise-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActions
      - name: Terraform init
        # tf-init.sh の中でディレクトリ指定しているので working-directory は不要
        run: mise run tf-init
      - name: Terraform apply
        # ディレクトリ移動しているので .tfnotify.yaml のパスを指定
        run: terraform apply -auto-approve -no-color | tfnotify --config ../.tfnotify.yaml apply
        working-directory: ./src
